cscope 15 $HOME/src/lc/geeksforgeeks/01_Tree/BSTUtil -q 0000000211 0000016410
	@BSTUtil.cpp

1 
	~"BSTUtû.hµ
"

3 
boﬁ
 
	gBö¨ySórchTªe
::
	$£¨ch
(
TªeNode
* 
x
, 
k
) {

4 i‡(
x
 =
nuŒ±r
Ë 
Ál£
;

5 i‡(
x
->
vÆ
 > 
k
)

6  
	`£¨ch
(
x
->
À·
, 
k
);

7 i‡(
x
->
vÆ
 < 
k
)

8  
	`£¨ch
(
x
->
right
, 
k
);

10  
åue
;

11 
	}
}

13 
	gBö¨ySórchTªe
::
	$öOrdîPröt
() {

14 
ve˘‹
<> 
v
 = 
	`öOrdî
();

15 
cout
 << "Inorder: ";

16 autÿ
x
:
v
) {

17 
cout
 << 
x
 << ", ";

19 
cout
 << 
ídl
;

20 
	}
}

21 
	gve˘‹
<> 
	gBö¨ySórchTªe
::
	$öOrdî
() {

22 
°ack
<
TªeNode
*> 
s
;

23 
TªeNode
 *
p
 = 
mRoŸ
;

24 
ve˘‹
<> 
r
;

25 !
s
.
	`em±y
(Ë|| 
p
) {

26 i‡(
p
) {

27 
s
.
	`push
(
p
);

28 
p
 =Ö->
À·
;

30 
p
 = 
s
.
	`t›
();

31 
r
.
	`push_back
(
p
->
vÆ
);

32 
s
.
	`p›
();

33 
p
 =Ö->
right
;

36  
r
;

37 
	}
}

39 
	gBö¨ySórchTªe
::
	$gëMö
(
TªeNode
* 
x
) {

40 
	`as£π
(
x
 !
nuŒ±r
);

41 
x
->
À·
) x = x->left;

42  
x
->
vÆ
;

43 
	}
}

49 
TªeNode
* 
	gBö¨ySórchTªe
::
	$ªmove
(
TªeNode
* 
x
, 
key
) {

50 i‡(
x
 =
nuŒ±r
) Çullptr;

51 i‡(
x
->
vÆ
 > 
key
)

52 
x
->
À·
 = 
	`ªmove
(x->À·, 
key
);

53 i‡(
x
->
vÆ
 < 
key
)

54 
x
->
right
 = 
	`ªmove
(x->right, 
key
);

57 i‡(
x
->
À·
 =
nuŒ±r
 || x->
right
 ==Çullptr) {

58 
TªeNode
* 
tmp
 = 
x
->
À·
 ? x->À· : x->
right
;

59 
dñëe
 
x
;

60  
tmp
;

64 
mö
 = 
	`gëMö
(
x
->
right
);

65 
x
->
vÆ
 = 
mö
;

67 
x
->
right
 = 
	`ªmove
(x->right, 
mö
);

68  
x
;

71  
x
;

72 
	}
}

74 
TªeNode
* 
	gBö¨ySórchTªe
::
	$ö£π
(
TªeNode
* 
x
, 
key
) {

75 i‡(
x
 =
nuŒ±r
)

76  
√w
 
	`TªeNode
(
key
);

77 i‡(
x
->
vÆ
 > 
key
)

78 
x
->
À·
 = 
	`ö£π
(x->À·, 
key
);

79 i‡(
x
->
vÆ
 < 
key
)

80 
x
->
right
 = 
	`ö£π
(x->right, 
key
);

81  
x
;

82 
	}
}

84 
TªeNode
* 
	gBSTUtû
::
	$de£rülize
(
i°rög°ªam
& 
i
) {

85 
°rög
 
vÆ
;

86 
TªeNode
* 
x
 = 
nuŒ±r
;

87 
i
 >> 
vÆ
;

88 i‡(
vÆ
 ="#"Ë 
x
;

90 
x
 = 
√w
 
	`TªeNode
(
	`°oi
(
vÆ
));

91 
x
->
À·
 = 
	`de£rülize
(
i
);

92 
x
->
right
 = 
	`de£rülize
(
i
);

94  
x
;

95 
	}
}

97 
TªeNode
* 
	gBSTUtû
::
	$de£rülize
(
°rög
 
d©a
) {

98 
i°rög°ªam
 
	`i
(
d©a
);

99  
	`de£rülize
(
i
);

100 
	}
}

102 
	gBSTUtû
::
	$£rülize
(
o°rög°ªam
& 
o
, 
TªeNode
* 
x
) {

103 i‡(
x
 =
nuŒ±r
) {

104 
o
 << "# ";

106 
o
 << 
x
->
vÆ
 << " ";

107 
	`£rülize
(
o
, 
x
->
À·
);

108 
	`£rülize
(
o
, 
x
->
right
);

110 
	}
}

112 
°rög
 
	gBSTUtû
::
	$£rülize
(
TªeNode
* 
x
) {

113 
o°rög°ªam
 
o
;

114 
	`£rülize
(
o
, 
x
);

115  
o
.
	`°r
();

116 
	}
}

119 
	gve˘‹
<>

120 
	gBSTUtû
::
	$gëUniqueR™domKeys
(
num
, 
ønge
) {

121 
ve˘‹
<> 
ªs
;

122 
	`§™d
(
	`time
(
nuŒ±r
));

123 
un‹dîed_£t
<> 
s
;

124 
i
 = 0;

125 i‡(
num
 > 
ønge
Ë 
ªs
;

126 
i
 < 
num
) {

127 
key
 = 
	`ønd
()%
ønge
;

128 i‡(
s
.
	`föd
(
key
Ë=s.
	`íd
()) {

129 
s
.
	`ö£π
(
key
);

130 
ªs
.
	`push_back
(
key
);

131 
i
++;

134  
ªs
;

135 
	}
}

139 
Bö¨ySórchTªe
*

140 
	gBSTUtû
::
¨øyToBST
(
ve˘‹
<>& 
¨r
) {

141 
Bö¨ySórchTªe
* 
t
 = 
√w
 BinarySearchTree();

142 autÿ
	gx
:
¨r
) {

143 
t
->
ö£π
(
x
);

145  
	gt
;

152 
	gãm∂©e
 <
ty≥«me
 
	gIãøt‹
>

153 
TªeNode
* 
	gBSTUtû
::
	$s‹ãdAºayToBST
(
Iãøt‹
 
°¨t
, Iãøt‹ 
íd
) {

154 i‡(
°¨t
 >
íd
Ë 
nuŒ±r
;

155 autÿ
size
 = 
	`di°™˚
(
°¨t
, 
íd
);

156 
vÆ
 = *(
°¨t
 + 
size
/2);

157 autÿ
pos
 = 
	`föd
(
°¨t
, 
íd
, 
vÆ
);

158 
TªeNode
* 
roŸ
 = 
√w
 
	`TªeNode
(
vÆ
);

159 
roŸ
->
À·
 = 
	`s‹ãdAºayToBST
(
°¨t
, 
pos
);

160 
roŸ
->
right
 = 
	`s‹ãdAºayToBST
(
	`√xt
(
pos
), 
íd
);

161  
roŸ
;

162 
	}
}

165 
Bö¨ySórchTªe
*

166 
	gBSTUtû
::
s‹ãdAºayToBST
(
ve˘‹
<>& 
¨r
) {

167 
n
 = 
¨r
.
size
();

168 
	gvÆ
 = 
¨r
[
n
/2];

169 autÿ
	gpos
 = 
föd
(
¨r
.
begö
(),áº.
íd
(), 
vÆ
);

170 
TªeNode
* 
	groŸ
 = 
√w
 TªeNode(
vÆ
);

171 
	groŸ
->
	gÀ·
 = 
s‹ãdAºayToBST
(
¨r
.
begö
(), 
pos
);

172 
	groŸ
->
	gright
 = 
s‹ãdAºayToBST
(
√xt
(
pos
), 
¨r
.
íd
());

173  
√w
 
Bö¨ySórchTªe
(
roŸ
);

176 
	gGíîÆTªe
::
	$ÀvñOrdîPröt
(
GíTªeNode
* 
x
) {

177 i‡(
x
 =
nuŒ±r
) ;

178 
queue
<
GíTªeNode
*> 
q
;

179 
q
.
	`push
(
x
);

180 
q
.
	`push
(
nuŒ±r
);

181 
cout
 << "Levñ Ordî: " << 
ídl
;

182 !
q
.
	`em±y
()) {

183 
x
 = 
q
.
	`‰⁄t
();

184 
q
.
	`p›
();

185 i‡(
x
 !
nuŒ±r
) {

186 
cout
 << 
x
->
vÆ
 << ", ";

187 
i
 = 0; i < 
x
->
c
.
	`size
(); i++) {

188 
q
.
	`push
(
x
->
c
[
i
]);

191 i‡(!
q
.
	`em±y
()Ëq.
	`push
(
nuŒ±r
);

192 
cout
 << 
ídl
;

195 
	}
}

197 
	gve˘‹
<ve˘‹<
	g°rög
>> 
	gBSTUtû
::
	$¥ötTªe
(
TªeNode
* 
roŸ
) {

198 
ve˘‹
<ve˘‹<
°rög
>> 
ªs
;

199 i‡(!
roŸ
Ë 
ªs
;

200 
deque
<
TªeNode
*> 
q
;

201 
q
.
	`push_back
(
roŸ
);

202 
q
.
	`push_back
(
nuŒ±r
);

203 
dïth
 = 0;

205 !
q
.
	`em±y
()) {

206 
TªeNode
* 
t
 = 
q
.
	`‰⁄t
(); q.
	`p›_‰⁄t
();

207 i‡(
t
 =
nuŒ±r
) {

208 
dïth
++;

209 i‡(!
q
.
	`em±y
()Ëq.
	`push_back
(
nuŒ±r
);

212 i‡(
t
->
À·
)

213 
q
.
	`push_back
(
t
->
À·
);

214 i‡(
t
->
right
)

215 
q
.
	`push_back
(
t
->
right
);

222 
ªs
.
	`ªsize
(
dïth
, 
ve˘‹
<
°rög
>(
	`pow
(2, depth)-1, ""));

227 
q
.
	`push_back
(
roŸ
);

228 
q
.
	`push_back
(
nuŒ±r
);

229 
curDïth
 = 0;

230 
un‹dîed_m≠
<
TªeNode
*, > 
m
;

231 
m
[
roŸ
] = 
	`pow
(2, 
dïth
-1) - 1;

232 
ªs
[
curDïth
][
m
[
roŸ
]] = 
	`to_°rög
‘oŸ->
vÆ
);

233 
curDïth
++;

234 !
q
.
	`em±y
()) {

235 
TªeNode
* 
t
 = 
q
.
	`‰⁄t
(); q.
	`p›_‰⁄t
();

236 
id
;

237 if(
t
 =
nuŒ±r
) {

238 
curDïth
++;

239 i‡(!
q
.
	`em±y
()Ëq.
	`push_back
(
nuŒ±r
);

242 i‡(
t
->
À·
) {

243 
q
.
	`push_back
(
t
->
À·
);

247 
id
 = 
m
[
t
] - 
	`pow
(2, 
dïth
-
curDïth
)/2;

248 
ªs
[
curDïth
][
id
] = 
	`to_°rög
(
t
->
À·
->
vÆ
);

249 
m
[
t
->
À·
] = 
id
;

251 i‡(
t
->
right
) {

252 
q
.
	`push_back
(
t
->
right
);

256 
id
 = 
m
[
t
] + 
	`pow
(2, 
dïth
-
curDïth
)/2;

257 
ªs
[
curDïth
][
id
] = 
	`to_°rög
(
t
->
right
->
vÆ
);

258 
m
[
t
->
right
] = 
id
;

261  
ªs
;

262 
	}
}

	@BSTUtil.hpp

1 #i‚de‡
__BSTUTIL_HPP_INCLUDED__


2 
	#__BSTUTIL_HPP_INCLUDED__


	)

4 
	~<queue
>

5 
	~<°rög
>

6 
	~<io°ªam
>

7 
	~<°ack
>

8 
	~<°rög
>

9 
	~<ve˘‹
>

10 
	~<˘ime
>

11 
	~<un‹dîed_£t
>

12 
	~<un‹dîed_m≠
>

13 
	~<as£π.h
>

14 
	~<Æg‹ôhm
>

15 
	~<s°ªam
>

16 
usög
 
«me•a˚
 
	g°d
;

19 ˛as†
	cTªeNode
 {

20 
	mpublic
:

21 
vÆ
;

22 
TªeNode
* 
	mÀ·
;

23 
TªeNode
* 
	mright
;

24 
	$TªeNode
(
x
): 
	`vÆ
(x), 
	`À·
(
nuŒ±r
), 
	$right
(
nuŒ±r
){}

25 
	}
};

28 ˛as†
	cGíTªeNode
 {

29 
	mpublic
:

30 
vÆ
;

31 
	mve˘‹
<
	mGíTªeNode
*> 
	mc
;

32 
	$GíTªeNode
(
x
): 
	$vÆ
(
x
Ë{ 
c
.
	`˛ór
(); }

33 
	}
};

35 ˛as†
	cBö¨ySórchTªe
 {

36 
	m¥iv©e
:

37 
TªeNode
* 
mRoŸ
;

38 
	m¥Ÿe˘ed
:

39 
TªeNode
* 
ö£π
(TªeNode* 
x
, 
k
);

40 
TªeNode
* 
ªmove
(TªeNode* 
x
, 
k
);

41 
boﬁ
 
£¨ch
(
TªeNode
* 
x
, 
k
);

42 
gëMö
(
TªeNode
* 
x
);

43 
	mpublic
:

44 
	$Bö¨ySórchTªe
():
	$mRoŸ
(
nuŒ±r
) {}

45 
	$Bö¨ySórchTªe
(
TªeNode
* 
x
):
	$mRoŸ
(
x
Ë{
	}
}

46 
	$ö£π
(
key
Ë{ 
mRoŸ
 = 
	`ö£π
(mRoŸ, key); 
	}
}

47 
	$ªmove
(
key
Ë{ 
mRoŸ
 = 
	`ªmove
(mRoŸ, key); 
	}
};

48 
TªeNode
* 
	$gëTªe
(Ë{  
mRoŸ
; 
	}
};

49 
	gve˘‹
<> 
öOrdî
();

50 
öOrdîPröt
();

51 
boﬁ
 
	$£¨ch
(
k
Ë{ 
	`£¨ch
(
mRoŸ
, k);
	}
}

54 ˛as†
	cBSTUtû
 {

55 
	m¥Ÿe˘ed
:

56 
ãm∂©e
 <
ty≥«me
 
Iãøt‹
>

57 
TªeNode
* 
s‹ãdAºayToBST
(
Iãøt‹
 
°¨t
, Iãøt‹ 
íd
);

58 
£rülize
(
o°rög°ªam
& 
o
, 
TªeNode
* 
x
);

59 
TªeNode
* 
de£rülize
(
i°rög°ªam
& 
i
);

60 
	mpublic
:

62 
TªeNode
* 
de£rülize
(
°rög
 
d©a
);

64 
°rög
 
£rülize
(
TªeNode
* 
roŸ
);

69 
	mve˘‹
<> 
gëUniqueR™domKeys
(
num
, 
ønge
 = 100);

71 
Bö¨ySórchTªe
* 
s‹ãdAºayToBST
(
ve˘‹
<>& 
¨r
);

73 
Bö¨ySórchTªe
* 
¨øyToBST
(
ve˘‹
<>& 
¨r
);

74 
	mve˘‹
<ve˘‹<
	m°rög
>> 
¥ötTªe
(
TªeNode
* 
roŸ
);

77 ˛as†
	cGíîÆTªe
 {

78 
	mpublic
:

79 
ÀvñOrdîPröt
(
GíTªeNode
* 
x
);

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


119 #unde‡
°©ic_as£π


120 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@
1
.
1
/usr/include
5
97
BSTUtil.cpp
BSTUtil.hpp
/usr/include/assert.h
/usr/include/features.h
/usr/include/stdc-predef.h
