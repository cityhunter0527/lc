2018  Dec Amazon Online test

1. Get closest destinations.

vector<pair<int, int> get_closest_destinations(int x, int y, int num_coords, int** coords, int num_destinations)

Input:
A vector of <x, y> which indicates a set of points. 
Another point <X, Y>. 
Return the num of "num_destinations" points which is the closest to input <x, y>.

Example:
x: 0, y: 0
num_cords: 3
coords: 
[1, 1], 
[2, 0], 
[1, 2]

Solution:


2. Move robot to the obstacles.

a. For every <x, y> position in the area, it could be of value 0, 1 or 9.
    0: means trench
    1: flag ground
	9: obstacles
b. Robot can only move to flat areas. 
c. Return the closest number of steps to obstacles if there is a route to obstacles.
d. Return -1 if there is no route to obstacles

Solution:
1. A 2-D array of bools which indicates whther a position has been visited 
1.a By "visited", it means from the min steps from this point to obstacles has been calculated. Initially each value is false.

2. Do it in a recusive way. 
3. The robot can move to each valid positions as long as this posistion has not been visited yet.
